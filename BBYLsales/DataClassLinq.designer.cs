#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.239
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace BBYLsales
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="sale")]
	public partial class DataClassLinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertF_INCOME(F_INCOME instance);
    partial void UpdateF_INCOME(F_INCOME instance);
    partial void DeleteF_INCOME(F_INCOME instance);
    partial void InsertF_CLASS(F_CLASS instance);
    partial void UpdateF_CLASS(F_CLASS instance);
    partial void DeleteF_CLASS(F_CLASS instance);
    #endregion
		
		public DataClassLinqDataContext() : 
				base(global::BBYLsales.Properties.Settings.Default.saleConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassLinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassLinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassLinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassLinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<F_INCOME> F_INCOME
		{
			get
			{
				return this.GetTable<F_INCOME>();
			}
		}
		
		public System.Data.Linq.Table<F_CLASS> F_CLASS
		{
			get
			{
				return this.GetTable<F_CLASS>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.F_INCOME")]
	public partial class F_INCOME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _进货批次;
		
		private int _品牌;
		
		private string _货号;
		
		private int _颜色;
		
		private int _尺码;
		
		private int _类型;
		
		private int _季节;
		
		private int _进货数量;
		
		private decimal _吊牌价;
		
		private decimal _进货价;
		
		private string _备注;
		
		private int _录入人员;
		
		private System.DateTime _录入时间;
		
		private EntityRef<F_CLASS> _F_CLASS;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void On进货批次Changing(string value);
    partial void On进货批次Changed();
    partial void On品牌Changing(int value);
    partial void On品牌Changed();
    partial void On货号Changing(string value);
    partial void On货号Changed();
    partial void On颜色Changing(int value);
    partial void On颜色Changed();
    partial void On尺码Changing(int value);
    partial void On尺码Changed();
    partial void On类型Changing(int value);
    partial void On类型Changed();
    partial void On季节Changing(int value);
    partial void On季节Changed();
    partial void On进货数量Changing(int value);
    partial void On进货数量Changed();
    partial void On吊牌价Changing(decimal value);
    partial void On吊牌价Changed();
    partial void On进货价Changing(decimal value);
    partial void On进货价Changed();
    partial void On备注Changing(string value);
    partial void On备注Changed();
    partial void On录入人员Changing(int value);
    partial void On录入人员Changed();
    partial void On录入时间Changing(System.DateTime value);
    partial void On录入时间Changed();
    #endregion
		
		public F_INCOME()
		{
			this._F_CLASS = default(EntityRef<F_CLASS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_进货批次", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string 进货批次
		{
			get
			{
				return this._进货批次;
			}
			set
			{
				if ((this._进货批次 != value))
				{
					this.On进货批次Changing(value);
					this.SendPropertyChanging();
					this._进货批次 = value;
					this.SendPropertyChanged("进货批次");
					this.On进货批次Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_品牌", DbType="Int NOT NULL")]
		public int 品牌
		{
			get
			{
				return this._品牌;
			}
			set
			{
				if ((this._品牌 != value))
				{
					if (this._F_CLASS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.On品牌Changing(value);
					this.SendPropertyChanging();
					this._品牌 = value;
					this.SendPropertyChanged("品牌");
					this.On品牌Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_货号", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string 货号
		{
			get
			{
				return this._货号;
			}
			set
			{
				if ((this._货号 != value))
				{
					this.On货号Changing(value);
					this.SendPropertyChanging();
					this._货号 = value;
					this.SendPropertyChanged("货号");
					this.On货号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_颜色", DbType="Int NOT NULL")]
		public int 颜色
		{
			get
			{
				return this._颜色;
			}
			set
			{
				if ((this._颜色 != value))
				{
					this.On颜色Changing(value);
					this.SendPropertyChanging();
					this._颜色 = value;
					this.SendPropertyChanged("颜色");
					this.On颜色Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_尺码", DbType="Int NOT NULL")]
		public int 尺码
		{
			get
			{
				return this._尺码;
			}
			set
			{
				if ((this._尺码 != value))
				{
					this.On尺码Changing(value);
					this.SendPropertyChanging();
					this._尺码 = value;
					this.SendPropertyChanged("尺码");
					this.On尺码Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_类型", DbType="Int NOT NULL")]
		public int 类型
		{
			get
			{
				return this._类型;
			}
			set
			{
				if ((this._类型 != value))
				{
					this.On类型Changing(value);
					this.SendPropertyChanging();
					this._类型 = value;
					this.SendPropertyChanged("类型");
					this.On类型Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_季节", DbType="Int NOT NULL")]
		public int 季节
		{
			get
			{
				return this._季节;
			}
			set
			{
				if ((this._季节 != value))
				{
					this.On季节Changing(value);
					this.SendPropertyChanging();
					this._季节 = value;
					this.SendPropertyChanged("季节");
					this.On季节Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_进货数量", DbType="Int NOT NULL")]
		public int 进货数量
		{
			get
			{
				return this._进货数量;
			}
			set
			{
				if ((this._进货数量 != value))
				{
					this.On进货数量Changing(value);
					this.SendPropertyChanging();
					this._进货数量 = value;
					this.SendPropertyChanged("进货数量");
					this.On进货数量Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_吊牌价", DbType="Decimal(18,2) NOT NULL")]
		public decimal 吊牌价
		{
			get
			{
				return this._吊牌价;
			}
			set
			{
				if ((this._吊牌价 != value))
				{
					this.On吊牌价Changing(value);
					this.SendPropertyChanging();
					this._吊牌价 = value;
					this.SendPropertyChanged("吊牌价");
					this.On吊牌价Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_进货价", DbType="Decimal(18,2) NOT NULL")]
		public decimal 进货价
		{
			get
			{
				return this._进货价;
			}
			set
			{
				if ((this._进货价 != value))
				{
					this.On进货价Changing(value);
					this.SendPropertyChanging();
					this._进货价 = value;
					this.SendPropertyChanged("进货价");
					this.On进货价Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_备注", DbType="NVarChar(50)")]
		public string 备注
		{
			get
			{
				return this._备注;
			}
			set
			{
				if ((this._备注 != value))
				{
					this.On备注Changing(value);
					this.SendPropertyChanging();
					this._备注 = value;
					this.SendPropertyChanged("备注");
					this.On备注Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_录入人员", DbType="Int NOT NULL")]
		public int 录入人员
		{
			get
			{
				return this._录入人员;
			}
			set
			{
				if ((this._录入人员 != value))
				{
					this.On录入人员Changing(value);
					this.SendPropertyChanging();
					this._录入人员 = value;
					this.SendPropertyChanged("录入人员");
					this.On录入人员Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_录入时间", DbType="DateTime NOT NULL")]
		public System.DateTime 录入时间
		{
			get
			{
				return this._录入时间;
			}
			set
			{
				if ((this._录入时间 != value))
				{
					this.On录入时间Changing(value);
					this.SendPropertyChanging();
					this._录入时间 = value;
					this.SendPropertyChanged("录入时间");
					this.On录入时间Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F_CLASS_F_INCOME", Storage="_F_CLASS", ThisKey="品牌", OtherKey="ID", IsForeignKey=true)]
		public F_CLASS F_CLASS
		{
			get
			{
				return this._F_CLASS.Entity;
			}
			set
			{
				F_CLASS previousValue = this._F_CLASS.Entity;
				if (((previousValue != value) 
							|| (this._F_CLASS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._F_CLASS.Entity = null;
						previousValue.F_INCOME.Remove(this);
					}
					this._F_CLASS.Entity = value;
					if ((value != null))
					{
						value.F_INCOME.Add(this);
						this._品牌 = value.ID;
					}
					else
					{
						this._品牌 = default(int);
					}
					this.SendPropertyChanged("F_CLASS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.F_CLASS")]
	public partial class F_CLASS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _品牌名称;
		
		private System.Nullable<bool> _颜色货号锁定;
		
		private EntitySet<F_INCOME> _F_INCOME;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void On品牌名称Changing(string value);
    partial void On品牌名称Changed();
    partial void On颜色货号锁定Changing(System.Nullable<bool> value);
    partial void On颜色货号锁定Changed();
    #endregion
		
		public F_CLASS()
		{
			this._F_INCOME = new EntitySet<F_INCOME>(new Action<F_INCOME>(this.attach_F_INCOME), new Action<F_INCOME>(this.detach_F_INCOME));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_品牌名称", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string 品牌名称
		{
			get
			{
				return this._品牌名称;
			}
			set
			{
				if ((this._品牌名称 != value))
				{
					this.On品牌名称Changing(value);
					this.SendPropertyChanging();
					this._品牌名称 = value;
					this.SendPropertyChanged("品牌名称");
					this.On品牌名称Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_颜色货号锁定", DbType="Bit")]
		public System.Nullable<bool> 颜色货号锁定
		{
			get
			{
				return this._颜色货号锁定;
			}
			set
			{
				if ((this._颜色货号锁定 != value))
				{
					this.On颜色货号锁定Changing(value);
					this.SendPropertyChanging();
					this._颜色货号锁定 = value;
					this.SendPropertyChanged("颜色货号锁定");
					this.On颜色货号锁定Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F_CLASS_F_INCOME", Storage="_F_INCOME", ThisKey="ID", OtherKey="品牌")]
		public EntitySet<F_INCOME> F_INCOME
		{
			get
			{
				return this._F_INCOME;
			}
			set
			{
				this._F_INCOME.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_F_INCOME(F_INCOME entity)
		{
			this.SendPropertyChanging();
			entity.F_CLASS = this;
		}
		
		private void detach_F_INCOME(F_INCOME entity)
		{
			this.SendPropertyChanging();
			entity.F_CLASS = null;
		}
	}
}
#pragma warning restore 1591
